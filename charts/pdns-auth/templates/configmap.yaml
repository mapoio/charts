apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "pdns-auth.fullname" . }}-config
  labels:
    {{- include "pdns-auth.labels" . | nindent 4 }}
data:
  pdns.conf.tpl: |-
    {{ "{{" }} range $key, $value := match "PDNS_" -{{ "}}" }}
    {{ "{{" }}- $key | trimPrefix "PDNS_" | replace "_" "-" {{ "}}" }} = {{ "{{" }} $value {{ "}}" }}
    {{ "{{" }} end -{{ "}}" }}
  
  mysql-schema.sql: |-
    CREATE TABLE domains (
      id                    INT AUTO_INCREMENT,
      name                  VARCHAR(255) NOT NULL,
      master                VARCHAR(128) DEFAULT NULL,
      last_check            INT DEFAULT NULL,
      type                  VARCHAR(6) NOT NULL,
      notified_serial       INT UNSIGNED DEFAULT NULL,
      account               VARCHAR(40) CHARACTER SET 'utf8' DEFAULT NULL,
      options               VARCHAR(64000) DEFAULT NULL,
      catalog               VARCHAR(255) DEFAULT NULL,
      PRIMARY KEY (id),
      UNIQUE KEY name_index (name)
    ) Engine=InnoDB CHARACTER SET 'latin1';

    CREATE TABLE records (
      id                    BIGINT AUTO_INCREMENT,
      domain_id             INT DEFAULT NULL,
      name                  VARCHAR(255) DEFAULT NULL,
      type                  VARCHAR(10) DEFAULT NULL,
      content               VARCHAR(64000) DEFAULT NULL,
      ttl                   INT DEFAULT NULL,
      prio                  INT DEFAULT NULL,
      disabled              TINYINT(1) DEFAULT 0,
      ordername             VARCHAR(255) BINARY DEFAULT NULL,
      auth                  TINYINT(1) DEFAULT 1,
      PRIMARY KEY (id),
      KEY nametype_index (name,type),
      KEY domain_id (domain_id),
      KEY ordername (ordername)
    ) Engine=InnoDB CHARACTER SET 'latin1';

    CREATE TABLE supermasters (
      ip                    VARCHAR(64) NOT NULL,
      nameserver            VARCHAR(255) NOT NULL,
      account               VARCHAR(40) CHARACTER SET 'utf8' NOT NULL,
      PRIMARY KEY (ip, nameserver)
    ) Engine=InnoDB CHARACTER SET 'latin1';

    CREATE TABLE comments (
      id                    INT AUTO_INCREMENT,
      domain_id             INT NOT NULL,
      name                  VARCHAR(255) NOT NULL,
      type                  VARCHAR(10) NOT NULL,
      modified_at           INT NOT NULL,
      account               VARCHAR(40) CHARACTER SET 'utf8' DEFAULT NULL,
      comment               TEXT CHARACTER SET 'utf8' NOT NULL,
      PRIMARY KEY (id),
      KEY comments_name_type_idx (name,type),
      KEY comments_order_idx (domain_id, modified_at)
    ) Engine=InnoDB CHARACTER SET 'latin1';

    CREATE TABLE domainmetadata (
      id                    INT AUTO_INCREMENT,
      domain_id             INT NOT NULL,
      kind                  VARCHAR(32),
      content               TEXT,
      PRIMARY KEY (id),
      KEY domainmetadata_idx (domain_id, kind)
    ) Engine=InnoDB CHARACTER SET 'latin1';

    CREATE TABLE cryptokeys (
      id                    INT AUTO_INCREMENT,
      domain_id             INT NOT NULL,
      flags                 INT NOT NULL,
      active                BOOL,
      published             BOOL DEFAULT 1,
      content               TEXT,
      PRIMARY KEY(id),
      KEY domainidindex (domain_id)
    ) Engine=InnoDB CHARACTER SET 'latin1';

    CREATE TABLE tsigkeys (
      id                    INT AUTO_INCREMENT,
      name                  VARCHAR(255),
      algorithm             VARCHAR(50),
      secret                VARCHAR(255),
      PRIMARY KEY (id),
      UNIQUE KEY namealgoindex (name, algorithm)
    ) Engine=InnoDB CHARACTER SET 'latin1';
    
  pgsql-schema.sql: |-
    CREATE TABLE domains (
      id                    SERIAL PRIMARY KEY,
      name                  VARCHAR(255) NOT NULL,
      master                VARCHAR(128) DEFAULT NULL,
      last_check            INT DEFAULT NULL,
      type                  VARCHAR(6) NOT NULL,
      notified_serial       INT DEFAULT NULL,
      account               VARCHAR(40) DEFAULT NULL,
      options               TEXT DEFAULT NULL,
      catalog               VARCHAR(255) DEFAULT NULL
    );

    CREATE UNIQUE INDEX name_index ON domains(name);

    CREATE TABLE records (
      id                    BIGSERIAL PRIMARY KEY,
      domain_id             INT DEFAULT NULL,
      name                  VARCHAR(255) DEFAULT NULL,
      type                  VARCHAR(10) DEFAULT NULL,
      content               VARCHAR(65535) DEFAULT NULL,
      ttl                   INT DEFAULT NULL,
      prio                  INT DEFAULT NULL,
      disabled              BOOL DEFAULT 'f',
      ordername             VARCHAR(255),
      auth                  BOOL DEFAULT 't'
    );

    CREATE INDEX rec_name_index ON records(name);
    CREATE INDEX nametype_index ON records(name,type);
    CREATE INDEX domain_id ON records(domain_id);
    CREATE INDEX orderindex ON records (ordername);

    CREATE TABLE supermasters (
      ip                    INET NOT NULL,
      nameserver            VARCHAR(255) NOT NULL,
      account               VARCHAR(40) NOT NULL,
      PRIMARY KEY(ip, nameserver)
    );

    CREATE TABLE comments (
      id                    SERIAL PRIMARY KEY,
      domain_id             INT NOT NULL,
      name                  VARCHAR(255) NOT NULL,
      type                  VARCHAR(10) NOT NULL,
      modified_at           INT NOT NULL,
      account               VARCHAR(40) DEFAULT NULL,
      comment               VARCHAR(65535) NOT NULL
    );

    CREATE INDEX comments_domain_id_idx ON comments (domain_id);
    CREATE INDEX comments_name_type_idx ON comments (name, type);
    CREATE INDEX comments_order_idx ON comments (domain_id, modified_at);

    CREATE TABLE domainmetadata (
      id                    SERIAL PRIMARY KEY,
      domain_id             INT REFERENCES domains(id) ON DELETE CASCADE,
      kind                  VARCHAR(32),
      content               TEXT
    );

    CREATE INDEX domainidmetaindex ON domainmetadata(domain_id);

    CREATE TABLE cryptokeys (
      id                    SERIAL PRIMARY KEY,
      domain_id             INT REFERENCES domains(id) ON DELETE CASCADE,
      flags                 INT NOT NULL,
      active                BOOL,
      published             BOOL DEFAULT TRUE,
      content               TEXT
    );

    CREATE INDEX domainidindex ON cryptokeys(domain_id);

    CREATE TABLE tsigkeys (
      id                    SERIAL PRIMARY KEY,
      name                  VARCHAR(255),
      algorithm             VARCHAR(50),
      secret                VARCHAR(255)
    );

    CREATE UNIQUE INDEX namealgoindex ON tsigkeys(name, algorithm);
    
  sqlite3-schema.sql: |-
    CREATE TABLE domains (
      id                    INTEGER PRIMARY KEY,
      name                  VARCHAR(255) NOT NULL COLLATE NOCASE,
      master                VARCHAR(128) DEFAULT NULL,
      last_check            INTEGER DEFAULT NULL,
      type                  VARCHAR(6) NOT NULL,
      notified_serial       INTEGER DEFAULT NULL,
      account               VARCHAR(40) DEFAULT NULL,
      options               VARCHAR(65535) DEFAULT NULL,
      catalog               VARCHAR(255) DEFAULT NULL
    );

    CREATE UNIQUE INDEX name_index ON domains(name);

    CREATE TABLE records (
      id                    INTEGER PRIMARY KEY,
      domain_id             INTEGER DEFAULT NULL,
      name                  VARCHAR(255) DEFAULT NULL,
      type                  VARCHAR(10) DEFAULT NULL,
      content               VARCHAR(65535) DEFAULT NULL,
      ttl                   INTEGER DEFAULT NULL,
      prio                  INTEGER DEFAULT NULL,
      disabled              BOOLEAN DEFAULT 0,
      ordername             VARCHAR(255),
      auth                  BOOL DEFAULT 1
    );

    CREATE INDEX rec_name_index ON records(name);
    CREATE INDEX nametype_index ON records(name,type);
    CREATE INDEX domain_id ON records(domain_id);
    CREATE INDEX orderindex ON records (ordername);

    CREATE TABLE supermasters (
      ip                    VARCHAR(64) NOT NULL,
      nameserver            VARCHAR(255) NOT NULL COLLATE NOCASE,
      account               VARCHAR(40) NOT NULL,
      PRIMARY KEY(ip, nameserver)
    );

    CREATE TABLE comments (
      id                    INTEGER PRIMARY KEY,
      domain_id             INTEGER NOT NULL,
      name                  VARCHAR(255) NOT NULL,
      type                  VARCHAR(10) NOT NULL,
      modified_at           INTEGER NOT NULL,
      account               VARCHAR(40) DEFAULT NULL,
      comment               VARCHAR(65535) NOT NULL
    );

    CREATE INDEX comments_domain_id_idx ON comments (domain_id);
    CREATE INDEX comments_name_type_idx ON comments (name, type);
    CREATE INDEX comments_order_idx ON comments (domain_id, modified_at);

    CREATE TABLE domainmetadata (
      id                    INTEGER PRIMARY KEY,
      domain_id             INTEGER NOT NULL,
      kind                  VARCHAR(32) COLLATE NOCASE,
      content               TEXT
    );

    CREATE INDEX domainmetaidindex ON domainmetadata(domain_id);

    CREATE TABLE cryptokeys (
      id                    INTEGER PRIMARY KEY,
      domain_id             INTEGER NOT NULL,
      flags                 INTEGER NOT NULL,
      active                BOOLEAN,
      published             BOOLEAN DEFAULT 1,
      content               TEXT
    );

    CREATE INDEX domainidindex ON cryptokeys(domain_id);

    CREATE TABLE tsigkeys (
      id                    INTEGER PRIMARY KEY,
      name                  VARCHAR(255) COLLATE NOCASE,
      algorithm             VARCHAR(50) COLLATE NOCASE,
      secret                VARCHAR(255)
    );

    CREATE UNIQUE INDEX namealgoindex ON tsigkeys(name, algorithm); 